name: CI/CD for DevOps TODO App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: todoapp
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install backend dependencies
        working-directory: backend
        run: npm install

      - name: Run backend tests (optional)
        working-directory: backend
        run: |
          npm test || echo "No tests defined"

      - name: Verify Docker installation
        run: |
          docker --version
          docker compose version

      - name: Build Docker images (backend + frontend)
        run: |
          docker compose -f docker-compose.yml build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          docker compose -f docker-compose.yml build
          docker tag backend:latest ${{ secrets.DOCKERHUB_USERNAME }}/todo-backend:latest
          docker tag frontend:latest ${{ secrets.DOCKERHUB_USERNAME }}/todo-frontend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/todo-backend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/todo-frontend:latest
